#Set sources
FILE(GLOB SOURCES *.c)
LIST(APPEND MCL_DATA_LAKE_SOURCES ${SOURCES})

SET(MCL_DATA_LAKE_SOURCES ${MCL_DATA_LAKE_SOURCES} CACHE INTERNAL "MCL_DATA_LAKE_SOURCES" FORCE)

#Specify library as target
SET(PROJECT_LIBRARY_OUTPUT mcl_data_lake CACHE INTERNAL "PROJECT_LIBRARY_OUTPUT" FORCE)
ADD_LIBRARY(${PROJECT_LIBRARY_OUTPUT} ${MCL_USER_DEFINED_DYNAMIC_OR_STATIC} ${MCL_DATA_LAKE_SOURCES})

SET_TARGET_PROPERTIES(${PROJECT_LIBRARY_OUTPUT} PROPERTIES FOLDER ${MCL_COMPONENT})
SET_TARGET_PROPERTIES(${PROJECT_LIBRARY_OUTPUT} PROPERTIES INSTALL_RPATH ${CMAKE_INSTALL_PREFIX}/${PACKAGE_DESTINATION_LIB})

ADD_DEPENDENCIES(mcl_data_lake mcl_core)

#Set include directories
LIST(APPEND MCL_DATA_LAKE_INCLUDE_DIRECTORIES ${CMAKE_CURRENT_SOURCE_DIR})
LIST(APPEND MCL_DATA_LAKE_INCLUDE_DIRECTORIES ${CMAKE_CURRENT_BINARY_DIR})
LIST(APPEND MCL_DATA_LAKE_INCLUDE_DIRECTORIES ${MCL_CMAKE_ROOT_DIR}/mcl_core/include)
LIST(APPEND MCL_DATA_LAKE_INCLUDE_DIRECTORIES ${MCL_DATA_LAKE_CMAKE_ROOT_DIR}/include)

IF(WIN32 OR WIN64)
	LIST(APPEND MCL_DATA_LAKE_LIBS ${MCL_OUTPUT_DIR}/mcl_core.lib)
ELSE()
	IF(MCL_STATICLIB)
		LIST(APPEND MCL_DATA_LAKE_LIBS ${MCL_OUTPUT_DIR}/libmcl_core.a)
	ELSE()
		LIST(APPEND MCL_DATA_LAKE_LIBS ${MCL_OUTPUT_DIR}/libmcl_core.so)
	ENDIF()
ENDIF()

LIST(APPEND MCL_DATA_LAKE_LIBS ${MCL_CORE_LIBS})

SET(MCL_DATA_LAKE_INCLUDE_DIRECTORIES ${MCL_DATA_LAKE_INCLUDE_DIRECTORIES} CACHE INTERNAL "MCL_DATA_LAKE_INCLUDE_DIRECTORIES" FORCE)
TARGET_INCLUDE_DIRECTORIES(${PROJECT_LIBRARY_OUTPUT} PUBLIC ${MCL_DATA_LAKE_INCLUDE_DIRECTORIES})

TARGET_LINK_LIBRARIES(${PROJECT_LIBRARY_OUTPUT} ${MCL_DATA_LAKE_LIBS})

#Set linker flag -lm for linking against the math lib (pow() floor())
IF(CMAKE_COMPILER_IS_GNUCC)
    TARGET_LINK_LIBRARIES(${PROJECT_LIBRARY_OUTPUT} m)
ENDIF()

#Set variables for distribution package destination
SET(PACKAGE_DESTINATION_LIB "lib")

#Install MCL target
INSTALL(TARGETS mcl_data_lake
        RUNTIME DESTINATION "${PACKAGE_DESTINATION_LIB}"
        LIBRARY DESTINATION "${PACKAGE_DESTINATION_LIB}"
        ARCHIVE DESTINATION "${PACKAGE_DESTINATION_LIB}")

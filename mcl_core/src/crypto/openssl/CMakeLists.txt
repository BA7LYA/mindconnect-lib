SET(OPENSSL_VERSION_NUMBER_REQUIRED 3.0.13)

#Try to find OpenSSL.
FIND_PACKAGE(OpenSSL)
IF(NOT OPENSSL_FOUND)
    MESSAGE(FATAL_ERROR "OpenSSL not found")
ENDIF()
    
#Verify OpenSSL version    
STRING(REGEX MATCH "[0-9]+[.][0-9]+[.][0-9]+" OPENSSL_VERSION_NUMBER ${OPENSSL_VERSION})
IF((OPENSSL_VERSION_NUMBER VERSION_LESS OPENSSL_VERSION_NUMBER_REQUIRED))
    MESSAGE(FATAL_ERROR "Found OpenSSL version ${OPENSSL_VERSION} but version ${OPENSSL_VERSION_NUMBER_REQUIRED} or later is required.")
ENDIF()  

SET(CMAKE_REQUIRED_INCLUDES ${OPENSSL_INCLUDE_DIR})
CHECK_INCLUDE_FILE("openssl/rsa.h" HAVE_OPENSSL_RSA_H_)
CHECK_INCLUDE_FILE("openssl/md5.h" HAVE_OPENSSL_MD5_H_)
CHECK_INCLUDE_FILE("openssl/sha.h" HAVE_OPENSSL_SHA_H_)
CHECK_INCLUDE_FILE("openssl/crypto.h" HAVE_OPENSSL_CRYPTO_H_)
CHECK_INCLUDE_FILE("openssl/rand.h" HAVE_OPENSSL_RAND_H_)
CHECK_INCLUDE_FILE("openssl/bn.h" HAVE_OPENSSL_BN_H_)
CHECK_INCLUDE_FILE("openssl/bio.h" HAVE_OPENSSL_BIO_H_)
CHECK_INCLUDE_FILE("openssl/pem.h" HAVE_OPENSSL_PEM_H_)

IF(NOT (HAVE_OPENSSL_RSA_H_ AND
        HAVE_OPENSSL_MD5_H_ AND
        HAVE_OPENSSL_SHA_H_ AND
        HAVE_OPENSSL_CRYPTO_H_ AND
        HAVE_OPENSSL_RAND_H_ AND
        HAVE_OPENSSL_BN_H_ AND
        HAVE_OPENSSL_BIO_H_ AND
        HAVE_OPENSSL_PEM_H_))
    MESSAGE(FATAL_ERROR "Not found required header file.")
ENDIF()

#MCL needs just these three to be set in PARENT_SCOPE.
#You may use FIND_PACKAGE like in this case or just manually set.
SET(MCL_CRYPTO_INCLUDE_DIRECTORIES ${OPENSSL_INCLUDE_DIR} ${CMAKE_CURRENT_SOURCE_DIR} PARENT_SCOPE)
SET(MCL_CRYPTO_LIBRARIES ${OPENSSL_CRYPTO_LIBRARY} PARENT_SCOPE)
SET(MCL_CRYPTO_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/security_libcrypto.c" PARENT_SCOPE)

IF(WIN32 OR WIN64)
    #This is not needed for compiling, you can manually copy dlls when needed.
    #Also if you are using static library, there is no need to set MCL_CRYPTO_DLLS.
    GET_FILENAME_COMPONENT(OPENSSL_LIBRARY_FOLDER ${OPENSSL_CRYPTO_LIBRARY} DIRECTORY)
    GET_FILENAME_COMPONENT(OPENSSL_FOLDER ${OPENSSL_LIBRARY_FOLDER} DIRECTORY)
    FILE(GLOB_RECURSE OPENSSL_CRYPTO_DLL ${OPENSSL_FOLDER}/libcrypto*.dll)
    SET(MCL_CRYPTO_DLLS ${OPENSSL_CRYPTO_DLL} PARENT_SCOPE)
ENDIF()
